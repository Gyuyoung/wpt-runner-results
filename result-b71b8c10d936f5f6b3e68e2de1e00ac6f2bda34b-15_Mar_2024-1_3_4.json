{"run_info": {"os": "linux", "processor": "x86_64", "version": "Ubuntu 22.04", "os_version": "22.04", "bits": 64, "has_sandbox": true, "display": "x11", "automation": false, "linux_distro": "Ubuntu", "apple_silicon": false, "apple_catalina": false, "win10_2004": false, "win10_2009": false, "win11_2009": false, "revision": "6cbcd198f597bc2bc686d635e601bab23604953f", "python_version": 3, "product": "chrome", "debug": false, "browser_version": "122.0.6261.69", "browser_channel": "canary", "verify": false, "wasm": false, "headless": false}, "time_start": 1709099544793, "results": [{"test": "/dom/events/keypress-dispatch-crash.html", "subsuite": "", "subtests": [], "status": "PASS", "message": null, "duration": 158, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-listener-order.window.html", "subsuite": "", "subtests": [{"name": "Event-dispatch-listener-order", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 205, "known_intermittent": []}, {"test": "/dom/events/AddEventListenerOptions-once.any.html", "subsuite": "", "subtests": [{"name": "Once listener should be invoked only once", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Once listener should be invoked only once even if the event is nested", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Once listener should be added / removed like normal listeners", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Multiple once listeners should be invoked even if the stopImmediatePropagation is set", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 201, "known_intermittent": []}, {"test": "/dom/events/Event-constructors.any.html", "subsuite": "", "subtests": [{"name": "Event constructors", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 1", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 2", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 3", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 4", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 5", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 6", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 7", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 8", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 9", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 10", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 11", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 12", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 13", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 204, "known_intermittent": []}, {"test": "/dom/events/AddEventListenerOptions-once.any.worker.html", "subsuite": "", "subtests": [{"name": "Once listener should be invoked only once", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Once listener should be invoked only once even if the event is nested", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Once listener should be added / removed like normal listeners", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Multiple once listeners should be invoked even if the stopImmediatePropagation is set", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 267, "known_intermittent": []}, {"test": "/dom/events/replace-event-listener-null-browsing-context-crash.html", "subsuite": "", "subtests": [], "status": "PASS", "message": null, "duration": 146, "known_intermittent": []}, {"test": "/dom/events/AddEventListenerOptions-signal.any.html", "subsuite": "", "subtests": [{"name": "Passing an AbortSignal to addEventListener options should allow removing a listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing an AbortSignal to addEventListener does not prevent removeEventListener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing an AbortSignal to addEventListener works with the once flag", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Removing a once listener works with a passed signal", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing an AbortSignal to multiple listeners", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing an AbortSignal to addEventListener works with the capture flag", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Aborting from a listener does not call future listeners", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Adding then aborting a listener in another listener does not call it", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Aborting from a nested listener should remove it", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing null as the signal should throw", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing null as the signal should throw (listener is also null)", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 149, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-bubbles-false.html", "subsuite": "", "subtests": [{"name": "In window.document with click event", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "In window.document with load event", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "In window.document.cloneNode(true)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "In new Document()", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "In DOMImplementation.createHTMLDocument()", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 147, "known_intermittent": []}, {"test": "/dom/events/Body-FrameSet-Event-Handlers.html", "subsuite": "", "subtests": [{"name": "Set HTMLBodyElement.onblur", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLBodyElement.onblur", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLBodyElement.onblur", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLBodyElement.onblur to Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Set HTMLFrameSetElement.onblur", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLFrameSetElement.onblur", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLFrameSetElement.onblur", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLFrameSetElement.onblur to Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Set HTMLBodyElement.onerror", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLBodyElement.onerror", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLBodyElement.onerror", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLBodyElement.onerror to Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Set HTMLFrameSetElement.onerror", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLFrameSetElement.onerror", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLFrameSetElement.onerror", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLFrameSetElement.onerror to Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Set HTMLBodyElement.onfocus", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLBodyElement.onfocus", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLBodyElement.onfocus", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLBodyElement.onfocus to Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Set HTMLFrameSetElement.onfocus", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLFrameSetElement.onfocus", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLFrameSetElement.onfocus", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLFrameSetElement.onfocus to Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Set HTMLBodyElement.onload", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLBodyElement.onload", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLBodyElement.onload", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLBodyElement.onload to Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Set HTMLFrameSetElement.onload", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLFrameSetElement.onload", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLFrameSetElement.onload", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLFrameSetElement.onload to Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Set HTMLBodyElement.onscroll", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLBodyElement.onscroll", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLBodyElement.onscroll", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLBodyElement.onscroll to Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Set HTMLFrameSetElement.onscroll", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLFrameSetElement.onscroll", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLFrameSetElement.onscroll", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLFrameSetElement.onscroll to Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Set HTMLBodyElement.onresize", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLBodyElement.onresize", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLBodyElement.onresize", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLBodyElement.onresize to Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Set HTMLFrameSetElement.onresize", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Enumerate HTMLFrameSetElement.onresize", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reflect HTMLFrameSetElement.onresize", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Forward HTMLFrameSetElement.onresize to Window", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 176, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-order.html", "subsuite": "", "subtests": [{"name": "Event phases order", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 176, "known_intermittent": []}, {"test": "/dom/events/AddEventListenerOptions-signal.any.worker.html", "subsuite": "", "subtests": [{"name": "Passing an AbortSignal to addEventListener options should allow removing a listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing an AbortSignal to addEventListener does not prevent removeEventListener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing an AbortSignal to addEventListener works with the once flag", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Removing a once listener works with a passed signal", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing an AbortSignal to multiple listeners", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing an AbortSignal to addEventListener works with the capture flag", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Aborting from a listener does not call future listeners", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Adding then aborting a listener in another listener does not call it", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Aborting from a nested listener should remove it", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing null as the signal should throw", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Passing null as the signal should throw (listener is also null)", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 312, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-click.html", "subsuite": "", "subtests": [{"name": "basic with click()", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "basic with dispatchEvent()", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "basic with wrong event class", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "look at parents only when event bubbles", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "look at parents when event bubbles", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "pick the first with activation behavior <input type=checkbox>", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "pick the first with activation behavior <a href>", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "pick the first with activation behavior <input type=radio>", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "event state during post-click handling", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "redispatch during post-click handling", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled checkbox still has activation behavior", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled checkbox still has activation behavior, part 2", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled radio still has activation behavior", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disconnected checkbox should be checked", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disconnected radio should be checked", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disconnected checkbox should be checked from dispatchEvent(new MouseEvent('click'))", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disconnected radio should be checked from dispatchEvent(new MouseEvent('click'))", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled checkbox should be checked from dispatchEvent(new MouseEvent(\"click\"))", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled radio should be checked from dispatchEvent(new MouseEvent(\"click\"))", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled checkbox should fire onclick", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled radio should fire onclick", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled checkbox should get legacy-canceled-activation behavior", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled radio should get legacy-canceled-activation behavior", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled checkbox should get legacy-canceled-activation behavior 2", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled radio should get legacy-canceled-activation behavior 2", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabling checkbox in onclick listener shouldn't suppress oninput", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabling checkbox in onclick listener shouldn't suppress onchange", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabling radio in onclick listener shouldn't suppress oninput", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabling radio in onclick listener shouldn't suppress onchange", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disconnected form should not submit", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled submit button should not activate", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "submit button should not activate if the event listener disables it", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "submit button that morphed from checkbox should not activate", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 145, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-handlers-changed.html", "subsuite": "", "subtests": [{"name": " Dispatch additional events inside an event listener ", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 168, "known_intermittent": []}, {"test": "/dom/events/CustomEvent.html", "subsuite": "", "subtests": [{"name": "CustomEvent dispatching.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "First parameter to initCustomEvent should be mandatory.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "initCustomEvent's default parameter values.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 176, "known_intermittent": []}, {"test": "/dom/events/Event-cancelBubble.html", "subsuite": "", "subtests": [{"name": "cancelBubble must be false when an event is initially created.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Initializing an event must set cancelBubble to false.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "stopPropagation() must set cancelBubble to true.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "stopImmediatePropagation() must set cancelBubble to true.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event.cancelBubble=false must have no effect.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event.cancelBubble=false must have no effect during event propagation.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "cancelBubble must be false after an event has been dispatched.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event.cancelBubble=true must set the stop propagation flag.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 180, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-redispatch.html", "subsuite": "", "subtests": [{"name": "Redispatching DOMContentLoaded event after being dispatched", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Redispatching mouseup event whose default action dispatches a click event", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Redispatching event which is being dispatched", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthesizing click on button...", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 253, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-click.tentative.html", "subsuite": "", "subtests": [{"name": "disabled checkbox should not be checked from label click", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled radio should not be checked from label click", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled checkbox should not be checked from label click by dispatchEvent", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "disabled radio should not be checked from label click by dispatchEvent", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "checkbox morphed into another type should not mutate checked state", "status": "FAIL", "message": "assert_false: expected false got true", "expected": "PASS", "known_intermittent": []}, {"name": "radio morphed into another type should not steal the existing checked state", "status": "FAIL", "message": "assert_false: expected false got true", "expected": "PASS", "known_intermittent": []}], "status": "OK", "message": null, "duration": 158, "known_intermittent": []}, {"test": "/dom/events/AddEventListenerOptions-passive.any.worker.html", "subsuite": "", "subtests": [{"name": "Supports passive option on addEventListener only", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "preventDefault should be ignored if-and-only-if the passive option is true", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "returnValue should be ignored if-and-only-if the passive option is true", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "passive behavior of one listener should be unaffected by the presence of other listeners", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Equivalence of option values", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 288, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-order-at-target.html", "subsuite": "", "subtests": [{"name": "Listeners are invoked in correct order (AT_TARGET phase)", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 182, "known_intermittent": []}, {"test": "/dom/events/Event-constants.html", "subsuite": "", "subtests": [{"name": "Constants for eventPhase on Event interface object.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Constants for eventPhase on Event prototype object.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Constants for eventPhase on Event object.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Constants for eventPhase on CustomEvent object.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 180, "known_intermittent": []}, {"test": "/dom/events/Event-defaultPrevented.html", "subsuite": "", "subtests": [{"name": "When an event is created, defaultPrevented should be initialized to false.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "initEvent should work correctly (not cancelable).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "preventDefault() should not change defaultPrevented if cancelable is false.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "returnValue should not change defaultPrevented if cancelable is false.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "initEvent should work correctly (cancelable).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "preventDefault() should change defaultPrevented if cancelable is true.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "returnValue should change defaultPrevented if cancelable is true.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "initEvent should unset defaultPrevented.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 155, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-bubble-canceled.html", "subsuite": "", "subtests": [{"name": "Setting cancelBubble=true prior to dispatchEvent()", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 175, "known_intermittent": []}, {"test": "/dom/events/Event-returnValue.html", "subsuite": "", "subtests": [{"name": "When an event is created, returnValue should be initialized to true.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "preventDefault() should not change returnValue if cancelable is false.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "returnValue=false should have no effect if cancelable is false.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "preventDefault() should change returnValue if cancelable is true.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "returnValue should change returnValue if cancelable is true.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "initEvent should unset returnValue.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "returnValue=true should have no effect once the canceled flag was set.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 172, "known_intermittent": []}, {"test": "/dom/events/Event-timestamp-safe-resolution.html", "subsuite": "", "subtests": [{"name": "Event timestamp should not have a resolution better than 5 microseconds", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 290, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-detached-input-and-change.html", "subsuite": "", "subtests": [{"name": "detached checkbox should not emit input or change events on click().", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "detached radio should not emit input or change events on click().", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "detached checkbox should not emit input or change events on dispatchEvent(new MouseEvent('click')).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "detached radio should not emit input or change events on dispatchEvent(new MouseEvent('click')).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "attached checkbox should emit input and change events on click().", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "attached radio should emit input and change events on click().", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "attached checkbox should emit input and change events on dispatchEvent(new MouseEvent('click')).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "attached radio should emit input and change events on dispatchEvent(new MouseEvent('click')).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "attached to shadow dom checkbox should emit input and change events on click().", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "attached to shadow dom radio should emit input and change events on click().", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "attached to shadow dom checkbox should emit input and change events on dispatchEvent(new MouseEvent('click')).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "attached to shadow dom radio should emit input and change events on dispatchEvent(new MouseEvent('click')).", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 155, "known_intermittent": []}, {"test": "/dom/events/Event-defaultPrevented-after-dispatch.html", "subsuite": "", "subtests": [{"name": "Default prevention via preventDefault", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Default prevention via returnValue", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 162, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-omitted-capture.html", "subsuite": "", "subtests": [{"name": "EventTarget.addEventListener with the capture argument omitted", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 97, "known_intermittent": []}, {"test": "/dom/events/Event-stopImmediatePropagation.html", "subsuite": "", "subtests": [{"name": "Event's stopImmediatePropagation", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 117, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-bubbles-true.html", "subsuite": "", "subtests": [{"name": "In window.document with click event", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "In window.document with load event", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "In window.document.cloneNode(true)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "In new Document()", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "In DOMImplementation.createHTMLDocument()", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 135, "known_intermittent": []}, {"test": "/dom/events/Event-type.html", "subsuite": "", "subtests": [{"name": "Event.type should initially be the empty string", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event.type should be initialized by initEvent", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event.type should be initialized by the constructor", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 158, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-detached-click.html", "subsuite": "", "subtests": [{"name": "Click event on an element not in the document", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Click event can be dispatched to an element that is not in the document.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 145, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-target-moved.html", "subsuite": "", "subtests": [{"name": "Event propagation path when an element in it is moved within the DOM", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 145, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-other-document.html", "subsuite": "", "subtests": [{"name": "Custom event on an element in another document", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 149, "known_intermittent": []}, {"test": "/dom/events/EventListener-incumbent-global-2.sub.html", "subsuite": "", "subtests": [{"name": "Check the incumbent global EventListeners  are called with", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 151, "known_intermittent": []}, {"test": "/dom/events/EventListener-addEventListener.sub.window.html", "subsuite": "", "subtests": [{"name": "EventListener.addEventListener doesn't throw when a cross origin object is passed in.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 209, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-multiple-stopPropagation.html", "subsuite": "", "subtests": [{"name": " Multiple dispatchEvent() and stopPropagation() ", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 169, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-throwing.html", "subsuite": "", "subtests": [{"name": "Throwing in event listener with a single listeners", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Throwing in event listener with multiple listeners", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 190, "known_intermittent": []}, {"test": "/dom/events/EventTarget-dispatchEvent.html", "subsuite": "", "subtests": [{"name": "Calling dispatchEvent(null).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (BeforeUnloadEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (CompositionEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (CustomEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (DeviceMotionEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (DeviceOrientationEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (DragEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (Event).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (Events).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (FocusEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (HashChangeEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (HTMLEvents).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (KeyboardEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (MessageEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (MouseEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (MouseEvents).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (StorageEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (SVGEvents).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (TextEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (UIEvent).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's initialized flag is not set, an InvalidStateError must be thrown (UIEvents).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "If the event's dispatch flag is set, an InvalidStateError must be thrown.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Exceptions from event listeners must not be propagated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event listeners added during dispatch should be called", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Capturing event listeners should be called before non-capturing ones", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 166, "known_intermittent": []}, {"test": "/dom/events/Event-isTrusted.any.worker.html", "subsuite": "", "subtests": [{"name": "Event-isTrusted", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 213, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-propagation-stopped.html", "subsuite": "", "subtests": [{"name": " Calling stopPropagation() prior to dispatchEvent() ", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 171, "known_intermittent": []}, {"test": "/dom/events/mouse-event-retarget.html", "subsuite": "", "subtests": [{"name": "offsetX is correctly adjusted", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 120, "known_intermittent": []}, {"test": "/dom/events/Event-isTrusted.any.html", "subsuite": "", "subtests": [{"name": "Event-isTrusted", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 150, "known_intermittent": []}, {"test": "/dom/events/Event-timestamp-high-resolution.html", "subsuite": "", "subtests": [{"name": "Constructed MouseEvent timestamp should be high resolution and have the same time origin as performance.now()", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Constructed KeyboardEvent timestamp should be high resolution and have the same time origin as performance.now()", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Constructed WheelEvent timestamp should be high resolution and have the same time origin as performance.now()", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Constructed FocusEvent timestamp should be high resolution and have the same time origin as performance.now()", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 166, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-on-disabled-elements.html", "subsuite": "", "subtests": [{"name": "Can dispatch untrusted 'click' Events at disabled HTML elements.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Can dispatch untrusted Events at disabled HTML elements.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Can dispatch CustomEvents at disabled HTML elements.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Calling click() on disabled elements must not dispatch events.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "CSS Transitions transitionrun, transitionstart, transitionend events fire on disabled form elements", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "CSS Transitions transitioncancel event fires on disabled form elements", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "CSS Animation animationstart, animationiteration, animationend fire on disabled form elements", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "CSS Animation's animationcancel event fires on disabled form elements", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Real clicks on disabled elements must not dispatch events.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 1569, "known_intermittent": []}, {"test": "/dom/events/EventListener-invoke-legacy.html", "subsuite": "", "subtests": [{"name": "Listener of transitionend", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Legacy listener of transitionend", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Listener of animationend", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Legacy listener of animationend", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Listener of animationstart", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Legacy listener of animationstart", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 379, "known_intermittent": []}, {"test": "/dom/events/AddEventListenerOptions-passive.any.html", "subsuite": "", "subtests": [{"name": "Supports passive option on addEventListener only", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "preventDefault should be ignored if-and-only-if the passive option is true", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "returnValue should be ignored if-and-only-if the passive option is true", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "passive behavior of one listener should be unaffected by the presence of other listeners", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Equivalence of option values", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 257, "known_intermittent": []}, {"test": "/dom/events/Event-subclasses-constructors.html", "subsuite": "", "subtests": [{"name": "Event constructor (no argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructor (undefined argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructor (null argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructor (empty argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructor (argument with default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructor (argument with non-default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "UIEvent constructor (no argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "UIEvent constructor (undefined argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "UIEvent constructor (null argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "UIEvent constructor (empty argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "UIEvent constructor (argument with default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "UIEvent constructor (argument with non-default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "FocusEvent constructor (no argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "FocusEvent constructor (undefined argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "FocusEvent constructor (null argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "FocusEvent constructor (empty argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "FocusEvent constructor (argument with default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "FocusEvent constructor (argument with non-default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "MouseEvent constructor (no argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "MouseEvent constructor (undefined argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "MouseEvent constructor (null argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "MouseEvent constructor (empty argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "MouseEvent constructor (argument with default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "MouseEvent constructor (argument with non-default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "WheelEvent constructor (no argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "WheelEvent constructor (undefined argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "WheelEvent constructor (null argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "WheelEvent constructor (empty argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "WheelEvent constructor (argument with default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "WheelEvent constructor (argument with non-default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "KeyboardEvent constructor (no argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "KeyboardEvent constructor (undefined argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "KeyboardEvent constructor (null argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "KeyboardEvent constructor (empty argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "KeyboardEvent constructor (argument with default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "KeyboardEvent constructor (argument with non-default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "CompositionEvent constructor (no argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "CompositionEvent constructor (undefined argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "CompositionEvent constructor (null argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "CompositionEvent constructor (empty argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "CompositionEvent constructor (argument with default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "CompositionEvent constructor (argument with non-default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "SubclassedEvent constructor (no argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "SubclassedEvent constructor (undefined argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "SubclassedEvent constructor (null argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "SubclassedEvent constructor (empty argument)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "SubclassedEvent constructor (argument with default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "SubclassedEvent constructor (argument with non-default values)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "UIEvent constructor (view argument with wrong type)", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 219, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-single-activation-behavior.html", "subsuite": "", "subtests": [{"name": "When clicking child <INPUT type=checkbox></INPUT> of parent <INPUT type=radio></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=checkbox></INPUT> of parent <FORM><INPUT type=submit></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=checkbox></INPUT> of parent <FORM><INPUT type=image></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=checkbox></INPUT> of parent <FORM><INPUT type=reset></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=checkbox></INPUT> of parent <FORM><BUTTON type=submit></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=checkbox></INPUT> of parent <FORM><BUTTON type=reset></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=checkbox></INPUT> of parent <A></A>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=checkbox></INPUT> of parent <AREA></AREA>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=checkbox></INPUT> of parent <DETAILS><SUMMARY></SUMMARY></DETAILS>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=checkbox></INPUT> of parent <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=checkbox></INPUT> of parent <LABEL><BUTTON type=button></BUTTON></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=radio></INPUT> of parent <INPUT type=checkbox></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=radio></INPUT> of parent <FORM><INPUT type=submit></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=radio></INPUT> of parent <FORM><INPUT type=image></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=radio></INPUT> of parent <FORM><INPUT type=reset></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=radio></INPUT> of parent <FORM><BUTTON type=submit></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=radio></INPUT> of parent <FORM><BUTTON type=reset></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=radio></INPUT> of parent <A></A>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=radio></INPUT> of parent <AREA></AREA>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=radio></INPUT> of parent <DETAILS><SUMMARY></SUMMARY></DETAILS>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=radio></INPUT> of parent <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <INPUT type=radio></INPUT> of parent <LABEL><BUTTON type=button></BUTTON></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=submit></INPUT></FORM> of parent <INPUT type=checkbox></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=submit></INPUT></FORM> of parent <INPUT type=radio></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=submit></INPUT></FORM> of parent <FORM><INPUT type=image></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=submit></INPUT></FORM> of parent <FORM><INPUT type=reset></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=submit></INPUT></FORM> of parent <FORM><BUTTON type=submit></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=submit></INPUT></FORM> of parent <FORM><BUTTON type=reset></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=submit></INPUT></FORM> of parent <A></A>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=submit></INPUT></FORM> of parent <AREA></AREA>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=submit></INPUT></FORM> of parent <DETAILS><SUMMARY></SUMMARY></DETAILS>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=submit></INPUT></FORM> of parent <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=submit></INPUT></FORM> of parent <LABEL><BUTTON type=button></BUTTON></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=image></INPUT></FORM> of parent <INPUT type=checkbox></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=image></INPUT></FORM> of parent <INPUT type=radio></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=image></INPUT></FORM> of parent <FORM><INPUT type=submit></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=image></INPUT></FORM> of parent <FORM><INPUT type=reset></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=image></INPUT></FORM> of parent <FORM><BUTTON type=submit></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=image></INPUT></FORM> of parent <FORM><BUTTON type=reset></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=image></INPUT></FORM> of parent <A></A>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=image></INPUT></FORM> of parent <AREA></AREA>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=image></INPUT></FORM> of parent <DETAILS><SUMMARY></SUMMARY></DETAILS>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=image></INPUT></FORM> of parent <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=image></INPUT></FORM> of parent <LABEL><BUTTON type=button></BUTTON></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=reset></INPUT></FORM> of parent <INPUT type=checkbox></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=reset></INPUT></FORM> of parent <INPUT type=radio></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=reset></INPUT></FORM> of parent <FORM><INPUT type=submit></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=reset></INPUT></FORM> of parent <FORM><INPUT type=image></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=reset></INPUT></FORM> of parent <FORM><BUTTON type=submit></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=reset></INPUT></FORM> of parent <FORM><BUTTON type=reset></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=reset></INPUT></FORM> of parent <A></A>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=reset></INPUT></FORM> of parent <AREA></AREA>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=reset></INPUT></FORM> of parent <DETAILS><SUMMARY></SUMMARY></DETAILS>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=reset></INPUT></FORM> of parent <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><INPUT type=reset></INPUT></FORM> of parent <LABEL><BUTTON type=button></BUTTON></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=submit></BUTTON></FORM> of parent <INPUT type=checkbox></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=submit></BUTTON></FORM> of parent <INPUT type=radio></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=submit></BUTTON></FORM> of parent <FORM><INPUT type=submit></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=submit></BUTTON></FORM> of parent <FORM><INPUT type=image></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=submit></BUTTON></FORM> of parent <FORM><INPUT type=reset></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=submit></BUTTON></FORM> of parent <FORM><BUTTON type=reset></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=submit></BUTTON></FORM> of parent <A></A>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=submit></BUTTON></FORM> of parent <AREA></AREA>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=submit></BUTTON></FORM> of parent <DETAILS><SUMMARY></SUMMARY></DETAILS>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=submit></BUTTON></FORM> of parent <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=submit></BUTTON></FORM> of parent <LABEL><BUTTON type=button></BUTTON></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=reset></BUTTON></FORM> of parent <INPUT type=checkbox></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=reset></BUTTON></FORM> of parent <INPUT type=radio></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=reset></BUTTON></FORM> of parent <FORM><INPUT type=submit></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=reset></BUTTON></FORM> of parent <FORM><INPUT type=image></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=reset></BUTTON></FORM> of parent <FORM><INPUT type=reset></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=reset></BUTTON></FORM> of parent <FORM><BUTTON type=submit></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=reset></BUTTON></FORM> of parent <A></A>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=reset></BUTTON></FORM> of parent <AREA></AREA>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=reset></BUTTON></FORM> of parent <DETAILS><SUMMARY></SUMMARY></DETAILS>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=reset></BUTTON></FORM> of parent <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <FORM><BUTTON type=reset></BUTTON></FORM> of parent <LABEL><BUTTON type=button></BUTTON></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <A></A> of parent <INPUT type=checkbox></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <A></A> of parent <INPUT type=radio></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <A></A> of parent <FORM><INPUT type=submit></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <A></A> of parent <FORM><INPUT type=image></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <A></A> of parent <FORM><INPUT type=reset></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <A></A> of parent <FORM><BUTTON type=submit></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <A></A> of parent <FORM><BUTTON type=reset></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <A></A> of parent <AREA></AREA>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <A></A> of parent <DETAILS><SUMMARY></SUMMARY></DETAILS>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <A></A> of parent <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <A></A> of parent <LABEL><BUTTON type=button></BUTTON></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <AREA></AREA> of parent <INPUT type=checkbox></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <AREA></AREA> of parent <INPUT type=radio></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <AREA></AREA> of parent <FORM><INPUT type=submit></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <AREA></AREA> of parent <FORM><INPUT type=image></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <AREA></AREA> of parent <FORM><INPUT type=reset></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <AREA></AREA> of parent <FORM><BUTTON type=submit></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <AREA></AREA> of parent <FORM><BUTTON type=reset></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <AREA></AREA> of parent <A></A>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <AREA></AREA> of parent <DETAILS><SUMMARY></SUMMARY></DETAILS>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <AREA></AREA> of parent <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <AREA></AREA> of parent <LABEL><BUTTON type=button></BUTTON></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <DETAILS><SUMMARY></SUMMARY></DETAILS> of parent <INPUT type=checkbox></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <DETAILS><SUMMARY></SUMMARY></DETAILS> of parent <INPUT type=radio></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <DETAILS><SUMMARY></SUMMARY></DETAILS> of parent <FORM><INPUT type=submit></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <DETAILS><SUMMARY></SUMMARY></DETAILS> of parent <FORM><INPUT type=image></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <DETAILS><SUMMARY></SUMMARY></DETAILS> of parent <FORM><INPUT type=reset></INPUT></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <DETAILS><SUMMARY></SUMMARY></DETAILS> of parent <FORM><BUTTON type=submit></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <DETAILS><SUMMARY></SUMMARY></DETAILS> of parent <FORM><BUTTON type=reset></BUTTON></FORM>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <DETAILS><SUMMARY></SUMMARY></DETAILS> of parent <A></A>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <DETAILS><SUMMARY></SUMMARY></DETAILS> of parent <AREA></AREA>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <DETAILS><SUMMARY></SUMMARY></DETAILS> of parent <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <DETAILS><SUMMARY></SUMMARY></DETAILS> of parent <LABEL><BUTTON type=button></BUTTON></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL> of parent <INPUT type=checkbox></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL> of parent <INPUT type=radio></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL> of parent <FORM><INPUT type=submit></INPUT></FORM>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: expected property 0 to be Element node <input type=\"checkbox\" onclick=\"this.checked ? activated(... but got Element node <form onsubmit=\"activated(this); return false\" class=\"act... (expected array [Element node <input type=\"checkbox\" onclick=\"this.checked ? activated(...] got [Element node <form onsubmit=\"activated(this); return false\" class=\"act...])", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL> of parent <FORM><INPUT type=image></INPUT></FORM>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: expected property 0 to be Element node <input type=\"checkbox\" onclick=\"this.checked ? activated(... but got Element node <form onsubmit=\"activated(this); return false\" class=\"act... (expected array [Element node <input type=\"checkbox\" onclick=\"this.checked ? activated(...] got [Element node <form onsubmit=\"activated(this); return false\" class=\"act...])", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL> of parent <FORM><INPUT type=reset></INPUT></FORM>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: expected property 0 to be Element node <input type=\"checkbox\" onclick=\"this.checked ? activated(... but got Element node <form onreset=\"activated(this)\" class=\"activates test114\"... (expected array [Element node <input type=\"checkbox\" onclick=\"this.checked ? activated(...] got [Element node <form onreset=\"activated(this)\" class=\"activates test114\"...])", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL> of parent <FORM><BUTTON type=submit></BUTTON></FORM>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: expected property 0 to be Element node <input type=\"checkbox\" onclick=\"this.checked ? activated(... but got Element node <form onsubmit=\"activated(this); return false\" class=\"act... (expected array [Element node <input type=\"checkbox\" onclick=\"this.checked ? activated(...] got [Element node <form onsubmit=\"activated(this); return false\" class=\"act...])", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL> of parent <FORM><BUTTON type=reset></BUTTON></FORM>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: expected property 0 to be Element node <input type=\"checkbox\" onclick=\"this.checked ? activated(... but got Element node <form onreset=\"activated(this)\" class=\"activates test116\"... (expected array [Element node <input type=\"checkbox\" onclick=\"this.checked ? activated(...] got [Element node <form onreset=\"activated(this)\" class=\"activates test116\"...])", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL> of parent <A></A>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL> of parent <AREA></AREA>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL> of parent <DETAILS><SUMMARY></SUMMARY></DETAILS>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL> of parent <LABEL><BUTTON type=button></BUTTON></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <LABEL><BUTTON type=button></BUTTON></LABEL> of parent <INPUT type=checkbox></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <LABEL><BUTTON type=button></BUTTON></LABEL> of parent <INPUT type=radio></INPUT>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <LABEL><BUTTON type=button></BUTTON></LABEL> of parent <FORM><INPUT type=submit></INPUT></FORM>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: lengths differ, expected array [] length 0, got [Element node <form onsubmit=\"activated(this); return false\" class=\"act...] length 1", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><BUTTON type=button></BUTTON></LABEL> of parent <FORM><INPUT type=image></INPUT></FORM>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: lengths differ, expected array [] length 0, got [Element node <form onsubmit=\"activated(this); return false\" class=\"act...] length 1", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><BUTTON type=button></BUTTON></LABEL> of parent <FORM><INPUT type=reset></INPUT></FORM>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: lengths differ, expected array [] length 0, got [Element node <form onreset=\"activated(this)\" class=\"activates test125\"...] length 1", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><BUTTON type=button></BUTTON></LABEL> of parent <FORM><BUTTON type=submit></BUTTON></FORM>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: lengths differ, expected array [] length 0, got [Element node <form onsubmit=\"activated(this); return false\" class=\"act...] length 1", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><BUTTON type=button></BUTTON></LABEL> of parent <FORM><BUTTON type=reset></BUTTON></FORM>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: lengths differ, expected array [] length 0, got [Element node <form onreset=\"activated(this)\" class=\"activates test127\"...] length 1", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><BUTTON type=button></BUTTON></LABEL> of parent <A></A>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: lengths differ, expected array [] length 0, got [\"http://web-platform.test:8000/dom/events/Event-dispatch-single-activation-behavior.html#test128_link\"] length 1", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><BUTTON type=button></BUTTON></LABEL> of parent <AREA></AREA>, only child should be activated.", "status": "FAIL", "message": "assert_array_equals: lengths differ, expected array [] length 0, got [\"http://web-platform.test:8000/dom/events/Event-dispatch-single-activation-behavior.html#test129_link\"] length 1", "expected": "PASS", "known_intermittent": []}, {"name": "When clicking child <LABEL><BUTTON type=button></BUTTON></LABEL> of parent <DETAILS><SUMMARY></SUMMARY></DETAILS>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "When clicking child <LABEL><BUTTON type=button></BUTTON></LABEL> of parent <LABEL><INPUT type=checkbox></INPUT><SPAN></SPAN></LABEL>, only child should be activated.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 340, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-reenter.html", "subsuite": "", "subtests": [{"name": " Dispatch additional events inside an event listener ", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 204, "known_intermittent": []}, {"test": "/dom/events/EventTarget-add-remove-listener.any.html", "subsuite": "", "subtests": [{"name": "Removing an event listener without explicit capture arg should succeed", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 227, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-touchmove-event-listener-on-body.html", "subsuite": "", "subtests": [{"name": "passive touchmove event listener on body", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 354, "known_intermittent": []}, {"test": "/dom/events/EventTarget-constructible.any.worker.html", "subsuite": "", "subtests": [{"name": "A constructed EventTarget can be used as expected", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "EventTarget can be subclassed", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 257, "known_intermittent": []}, {"test": "/dom/events/EventListener-handleEvent-cross-realm.html", "subsuite": "", "subtests": [{"name": "EventListener is cross-realm plain object without 'handleEvent' property", "status": "FAIL", "message": "assert_equals: expected \"object\" but got \"undefined\"", "expected": "PASS", "known_intermittent": []}, {"name": "EventListener is cross-realm plain object with non-callable 'handleEvent' property", "status": "FAIL", "message": "assert_equals: expected \"object\" but got \"undefined\"", "expected": "PASS", "known_intermittent": []}, {"name": "EventListener is cross-realm plain object with revoked Proxy as 'handleEvent' property", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "EventListener is cross-realm non-callable revoked Proxy", "status": "FAIL", "message": "assert_equals: expected \"object\" but got \"undefined\"", "expected": "PASS", "known_intermittent": []}, {"name": "EventListener is cross-realm callable revoked Proxy", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 237, "known_intermittent": []}, {"test": "/dom/events/EventListener-handleEvent.html", "subsuite": "", "subtests": [{"name": "calls `handleEvent` method of `EventListener`", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "performs `Get` every time event is dispatched", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "doesn't call `handleEvent` method on callable `EventListener`", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "rethrows errors when getting `handleEvent`", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "throws if `handleEvent` is falsy and not callable", "status": "FAIL", "message": "assert_true: Timed out waiting for error expected true got false", "expected": "PASS", "known_intermittent": []}, {"name": "throws if `handleEvent` is thruthy and not callable", "status": "FAIL", "message": "assert_true: Timed out waiting for error expected true got false", "expected": "PASS", "known_intermittent": []}], "status": "OK", "message": null, "duration": 196, "known_intermittent": []}, {"test": "/dom/events/EventTarget-removeEventListener.any.html", "subsuite": "", "subtests": [{"name": "removing a null event listener should succeed", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 188, "known_intermittent": []}, {"test": "/dom/events/Event-constructors.any.worker.html", "subsuite": "", "subtests": [{"name": "Event constructors", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 1", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 2", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 3", "status": "FAIL", "message": "assert_true: expected true got false", "expected": "PASS", "known_intermittent": []}, {"name": "Event constructors 4", "status": "FAIL", "message": "assert_true: expected true got false", "expected": "PASS", "known_intermittent": []}, {"name": "Event constructors 5", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 6", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 7", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 8", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 9", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 10", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 11", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 12", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Event constructors 13", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 328, "known_intermittent": []}, {"test": "/dom/events/event-disabled-dynamic.html", "subsuite": "", "subtests": [{"name": "disabled is honored properly in presence of dynamic changes", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 177, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-touchmove-event-listener-on-div.html", "subsuite": "", "subtests": [{"name": "passive touchmove event listener on div", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 305, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-target-removed.html", "subsuite": "", "subtests": [{"name": "Event propagation path when an element in it is removed from the DOM", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 126, "known_intermittent": []}, {"test": "/dom/events/EventTarget-removeEventListener.any.worker.html", "subsuite": "", "subtests": [{"name": "removing a null event listener should succeed", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 231, "known_intermittent": []}, {"test": "/dom/events/Event-stopPropagation-cancel-bubbling.html", "subsuite": "", "subtests": [{"name": "Event-stopPropagation-cancel-bubbling", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 112, "known_intermittent": []}, {"test": "/dom/events/event-global-extra.window.html", "subsuite": "", "subtests": [{"name": "window.event for constructors from another global: EventTarget", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "window.event for constructors from another global: XMLHttpRequest", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "window.event and element from another document", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "window.event and moving an element post-dispatch", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "window.event should not be affected by nodes moving post-dispatch", "status": "FAIL", "message": "assert_equals: expected (undefined) undefined but got (object) object \"[object Event]\"", "expected": "PASS", "known_intermittent": []}, {"name": "Listener from a different global", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 117, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-touchstart-event-listener-on-div.html", "subsuite": "", "subtests": [{"name": "non-passive touchstart event listener on div", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 376, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-wheel-event-listener-on-body.html", "subsuite": "", "subtests": [{"name": "passive wheel event listener on body", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 270, "known_intermittent": []}, {"test": "/dom/events/Event-timestamp-high-resolution.https.html", "subsuite": "", "subtests": [{"name": "Constructed GamepadEvent timestamp should be high resolution and have the same time origin as performance.now()", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 247, "known_intermittent": []}, {"test": "/dom/events/remove-all-listeners.html", "subsuite": "", "subtests": [{"name": "Removing all listeners and then adding a new one should work.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Nested usage of once listeners should work.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 133, "known_intermittent": []}, {"test": "/dom/events/Event-type-empty.html", "subsuite": "", "subtests": [{"name": "initEvent", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Constructor", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 164, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-mousewheel-event-listener-on-document.html", "subsuite": "", "subtests": [{"name": "passive mousewheel event listener on document", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 276, "known_intermittent": []}, {"test": "/dom/events/EventListenerOptions-capture.html", "subsuite": "", "subtests": [{"name": "Capture boolean should be honored correctly", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Capture option should be honored correctly", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Supports capture option", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Equivalence of option values", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 171, "known_intermittent": []}, {"test": "/dom/events/EventTarget-add-remove-listener.any.worker.html", "subsuite": "", "subtests": [{"name": "Removing an event listener without explicit capture arg should succeed", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 292, "known_intermittent": []}, {"test": "/dom/events/EventTarget-constructible.any.html", "subsuite": "", "subtests": [{"name": "A constructed EventTarget can be used as expected", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "EventTarget can be subclassed", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 164, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-touchmove-event-listener-on-document.html", "subsuite": "", "subtests": [{"name": "passive touchmove event listener on document", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 393, "known_intermittent": []}, {"test": "/dom/events/EventTarget-dispatchEvent-returnvalue.html", "subsuite": "", "subtests": [{"name": "Return value of EventTarget.dispatchEvent() affected by preventDefault().", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Return value of EventTarget.dispatchEvent() affected by returnValue.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 139, "known_intermittent": []}, {"test": "/dom/events/Event-init-while-dispatching.html", "subsuite": "", "subtests": [{"name": "Calling initKeyboardEvent while dispatching.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Calling initMouseEvent while dispatching.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Calling initCustomEvent while dispatching.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Calling initUIEvent while dispatching.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Calling initEvent while dispatching.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 148, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-wheel-event-listener-on-div.html", "subsuite": "", "subtests": [{"name": "non-passive wheel event listener on div", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 322, "known_intermittent": []}, {"test": "/dom/events/KeyEvent-initKeyEvent.html", "subsuite": "", "subtests": [{"name": "KeyboardEvent.initKeyEvent shouldn't be defined (created by createEvent(\"KeyboardEvent\")", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "KeyboardEvent.initKeyEvent shouldn't be defined (created by constructor)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "KeyboardEvent.prototype.initKeyEvent shouldn't be defined", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 87, "known_intermittent": []}, {"test": "/dom/events/Event-initEvent.html", "subsuite": "", "subtests": [{"name": "Properties of initEvent(type, true, true)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Properties of initEvent(type, true, false)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Properties of initEvent(type, false, true)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Properties of initEvent(type, false, false)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Calling initEvent multiple times (getting type).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Calling initEvent multiple times (not getting type).", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Calling initEvent must not have an effect during dispatching.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Calling initEvent must unset the stop propagation flag.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Calling initEvent must unset the stop immediate propagation flag.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Calling initEvent during propagation.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "First parameter to initEvent should be mandatory.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Tests initEvent's default parameter values.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 200, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-touchstart-event-listener-on-root.html", "subsuite": "", "subtests": [{"name": "passive touchstart event listener on root", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 386, "known_intermittent": []}, {"test": "/dom/events/EventListener-incumbent-global-1.sub.html", "subsuite": "", "subtests": [{"name": "Check the incumbent global EventListeners  are called with", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 225, "known_intermittent": []}, {"test": "/dom/events/Event-dispatch-multiple-cancelBubble.html", "subsuite": "", "subtests": [{"name": "Multiple dispatchEvent() and cancelBubble", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 195, "known_intermittent": []}, {"test": "/dom/events/event-global-is-still-set-when-coercing-beforeunload-result.html", "subsuite": "", "subtests": [{"name": "window.event is still set when 'beforeunload' result is coerced to string", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 278, "known_intermittent": []}, {"test": "/dom/events/Event-propagation.html", "subsuite": "", "subtests": [{"name": "Newly-created Event", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "After stopPropagation()", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reinitialized after stopPropagation()", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "After stopImmediatePropagation()", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reinitialized after stopImmediatePropagation()", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "After cancelBubble=true", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reinitialized after cancelBubble=true", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 163, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-mousewheel-event-listener-on-body.html", "subsuite": "", "subtests": [{"name": "passive mousewheel event listener on body", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 448, "known_intermittent": []}, {"test": "/dom/events/event-global.html", "subsuite": "", "subtests": [{"name": "event exists on window, which is initially set to undefined", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "window.event is only defined during dispatch", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "window.event is undefined if the target is in a shadow tree (event dispatched outside shadow tree)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "window.event is undefined if the target is in a shadow tree (event dispatched inside shadow tree)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "window.event is undefined inside window.onerror if the target is in a shadow tree (ErrorEvent dispatched inside shadow tree)", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "window.event is set to the current event during dispatch", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "window.event is set to the current event, which is the event passed to dispatch", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 183, "known_intermittent": []}, {"test": "/dom/events/EventTarget-this-of-listener.html", "subsuite": "", "subtests": [{"name": "the this value inside the event listener callback should be the node", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "the this value inside the event listener object handleEvent should be the object", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent should invoke the current handleEvent method of the object", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "addEventListener should not require handleEvent to be defined on object listeners", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "handleEvent properties added to a function before addEventListener are not reached", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "handleEvent properties added to a function after addEventListener are not reached", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 144, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-mousewheel-event-listener-on-body.html", "subsuite": "", "subtests": [{"name": "non-passive mousewheel event listener on body", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 257, "known_intermittent": []}, {"test": "/dom/events/legacy-pre-activation-behavior.window.html", "subsuite": "", "subtests": [{"name": "Use NONE phase during legacy-pre-activation behavior", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 119, "known_intermittent": []}, {"test": "/dom/events/event-global.worker.html", "subsuite": "", "subtests": [{"name": "There's no self.event (that's why we call it window.event) in workers", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 211, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-touchstart-event-listener-on-window.html", "subsuite": "", "subtests": [{"name": "passive touchstart event listener on window", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 401, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-wheel-event-listener-on-div.html", "subsuite": "", "subtests": [{"name": "passive wheel event listener on div", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 228, "known_intermittent": []}, {"test": "/dom/events/focus-event-document-move.html", "subsuite": "", "subtests": [{"name": "Moving a node during mousedown should not crash", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 272, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-mousewheel-event-listener-on-document.html", "subsuite": "", "subtests": [{"name": "non-passive mousewheel event listener on document", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 321, "known_intermittent": []}, {"test": "/dom/events/scrolling/iframe-chains.html", "subsuite": "", "subtests": [{"name": "Wheel scroll in iframe chains to containing element.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 161, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-wheel-event-listener-on-document.html", "subsuite": "", "subtests": [{"name": "passive wheel event listener on document", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 271, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-mousewheel-event-listener-on-div.html", "subsuite": "", "subtests": [{"name": "non-passive mousewheel event listener on div", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 287, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-touchmove-event-listener-on-body.html", "subsuite": "", "subtests": [{"name": "non-passive touchmove event listener on body", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 384, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-mousewheel-event-listener-on-window.html", "subsuite": "", "subtests": [{"name": "non-passive mousewheel event listener on window", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 251, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-handler-content-attributes.html", "subsuite": "", "subtests": [{"name": "Tests scrollend event is handled by event handler content attribute.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Tests scrollend event is not fired to document body event handler content attribute.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Tests scrollend event is fired to document event handler property", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Tests scrollend event is fired to element event handler property", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 321, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-wheel-event-listener-on-body.html", "subsuite": "", "subtests": [{"name": "non-passive wheel event listener on body", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 248, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-touchmove-event-listener-on-div.html", "subsuite": "", "subtests": [{"name": "non-passive touchmove event listener on div", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 346, "known_intermittent": []}, {"test": "/dom/events/no-focus-events-at-clicking-editable-content-in-link.html", "subsuite": "", "subtests": [{"name": "Click editable element in link", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Click editable link", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 574, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-mousewheel-event-listener-on-root.html", "subsuite": "", "subtests": [{"name": "passive mousewheel event listener on root", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 247, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-touchstart-event-listener-on-body.html", "subsuite": "", "subtests": [{"name": "non-passive touchstart event listener on body", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 344, "known_intermittent": []}, {"test": "/dom/events/Event-timestamp-cross-realm-getter.html", "subsuite": "", "subtests": [{"name": "event.timeStamp is initialized using event's relevant global object", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 1234, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-mousewheel-event-listener-on-root.html", "subsuite": "", "subtests": [{"name": "non-passive mousewheel event listener on root", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 254, "known_intermittent": []}, {"test": "/dom/events/EventTarget-add-listener-platform-object.html", "subsuite": "", "subtests": [{"name": "addEventListener with a platform object", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 115, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-touchmove-event-listener-on-document.html", "subsuite": "", "subtests": [{"name": "non-passive touchmove event listener on document", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 358, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-touchstart-event-listener-on-document.html", "subsuite": "", "subtests": [{"name": "passive touchstart event listener on document", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 308, "known_intermittent": []}, {"test": "/dom/events/EventTarget-addEventListener.any.html", "subsuite": "", "subtests": [{"name": "Adding a null event listener should succeed", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 121, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-touchstart-event-listener-on-document.html", "subsuite": "", "subtests": [{"name": "non-passive touchstart event listener on document", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 394, "known_intermittent": []}, {"test": "/dom/events/preventDefault-during-activation-behavior.html", "subsuite": "", "subtests": [{"name": "behavior of preventDefault during activation behavior", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 128, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-fired-for-programmatic-scroll.html", "subsuite": "", "subtests": [{"name": "Tests scrollend event for calling scroll functions.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Tests scrollend event for changing scroll attributes.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 2610, "known_intermittent": []}, {"test": "/dom/events/EventTarget-addEventListener.any.worker.html", "subsuite": "", "subtests": [{"name": "Adding a null event listener should succeed", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 216, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-touchmove-event-listener-on-root.html", "subsuite": "", "subtests": [{"name": "non-passive touchmove event listener on root", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 364, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-touchmove-event-listener-on-window.html", "subsuite": "", "subtests": [{"name": "non-passive-touchmove-event-listener-on-window", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 324, "known_intermittent": []}, {"test": "/dom/events/event-global-is-still-set-when-reporting-exception-onerror.html", "subsuite": "", "subtests": [{"name": "window.onerror handler restores window.event after it reports an exception", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 131, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-touchstart-event-listener-on-root.html", "subsuite": "", "subtests": [{"name": "non-passive touchstart event listener on root", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 367, "known_intermittent": []}, {"test": "/dom/events/event-global-set-before-handleEvent-lookup.window.html", "subsuite": "", "subtests": [{"name": "window.event is set before 'handleEvent' lookup", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 115, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-mousewheel-event-listener-on-div.html", "subsuite": "", "subtests": [{"name": "passive mousewheel event listener on div", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 266, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-wheel-event-listener-on-document.html", "subsuite": "", "subtests": [{"name": "non-passive wheel event listener on document", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 263, "known_intermittent": []}, {"test": "/dom/events/webkit-animation-iteration-event.html", "subsuite": "", "subtests": [{"name": "onanimationiteration and onwebkitanimationiteration are not aliases", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of a webkitAnimationIteration event does trigger a prefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of a webkitAnimationIteration event does not trigger an unprefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of an animationiteration event does not trigger a prefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkitanimationiteration event handler should trigger for an animation", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkitanimationiteration event handler should not trigger if an unprefixed event handler also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkitanimationiteration event handler should not trigger if an unprefixed listener also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "event types for prefixed and unprefixed animationiteration event handlers should be named appropriately", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationIteration event listener should trigger for an animation", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationIteration event listener should not trigger if an unprefixed listener also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationIteration event listener should not trigger if an unprefixed event handler also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "event types for prefixed and unprefixed animationiteration event listeners should be named appropriately", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationIteration event listener is case sensitive", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 1162, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-mousewheel-event-listener-on-window.html", "subsuite": "", "subtests": [{"name": "passive mousewheel event listener on window", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 266, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-wheel-event-listener-on-root.html", "subsuite": "", "subtests": [{"name": "non-passive wheel event listener on root", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 273, "known_intermittent": []}, {"test": "/dom/events/passive-by-default.html", "subsuite": "", "subtests": [{"name": "touchstart listener is passive by default for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive with {passive:undefined} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is non-passive with {passive:false} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive with {passive:true} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive by default for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive with {passive:undefined} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is non-passive with {passive:false} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive with {passive:true} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive by default for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive with {passive:undefined} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is non-passive with {passive:false} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive with {passive:true} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive by default for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive with {passive:undefined} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is non-passive with {passive:false} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive with {passive:true} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is non-passive by default for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is non-passive with {passive:undefined} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is non-passive with {passive:false} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchstart listener is passive with {passive:true} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive by default for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive with {passive:undefined} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is non-passive with {passive:false} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive with {passive:true} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive by default for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive with {passive:undefined} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is non-passive with {passive:false} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive with {passive:true} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive by default for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive with {passive:undefined} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is non-passive with {passive:false} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive with {passive:true} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive by default for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive with {passive:undefined} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is non-passive with {passive:false} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive with {passive:true} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is non-passive by default for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is non-passive with {passive:undefined} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is non-passive with {passive:false} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchmove listener is passive with {passive:true} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive by default for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive with {passive:undefined} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is non-passive with {passive:false} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive with {passive:true} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive by default for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive with {passive:undefined} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is non-passive with {passive:false} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive with {passive:true} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive by default for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive with {passive:undefined} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is non-passive with {passive:false} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive with {passive:true} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive by default for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive with {passive:undefined} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is non-passive with {passive:false} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive with {passive:true} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is non-passive by default for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is non-passive with {passive:undefined} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is non-passive with {passive:false} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "wheel listener is passive with {passive:true} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive by default for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive with {passive:undefined} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is non-passive with {passive:false} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive with {passive:true} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive by default for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive with {passive:undefined} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is non-passive with {passive:false} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive with {passive:true} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive by default for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive with {passive:undefined} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is non-passive with {passive:false} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive with {passive:true} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive by default for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive with {passive:undefined} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is non-passive with {passive:false} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive with {passive:true} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is non-passive by default for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is non-passive with {passive:undefined} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is non-passive with {passive:false} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "mousewheel listener is passive with {passive:true} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive by default for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive with {passive:undefined} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive with {passive:false} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is passive with {passive:true} for Window", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive by default for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive with {passive:undefined} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive with {passive:false} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is passive with {passive:true} for HTMLDocument", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive by default for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive with {passive:undefined} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive with {passive:false} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is passive with {passive:true} for HTMLHtmlElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive by default for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive with {passive:undefined} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive with {passive:false} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is passive with {passive:true} for HTMLBodyElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive by default for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive with {passive:undefined} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is non-passive with {passive:false} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "touchend listener is passive with {passive:true} for HTMLDivElement", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 110, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-touchstart-event-listener-on-window.html", "subsuite": "", "subtests": [{"name": "non-passive touchstart event listener on window", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 375, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-touchstart-event-listener-on-body.html", "subsuite": "", "subtests": [{"name": "passive touchstart event listener on body", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 372, "known_intermittent": []}, {"test": "/dom/events/scrolling/overscroll-event-fired-to-element-with-overscroll-behavior.html", "subsuite": "", "subtests": [], "status": "ERROR", "message": "javascript error: window.__wptrunner_process_next_event is not a function\nJavaScript stack:\nTypeError: window.__wptrunner_process_next_event is not a function\n    at eval (eval at executeAsyncScript (:447:26), <anonymous>:7:8)\n    at eval (eval at executeAsyncScript (:447:26), <anonymous>:9:4)\n    at executeAsyncScript (<anonymous>:447:47)\n    at <anonymous>:462:29\n    at callFunction (<anonymous>:341:22)\n    at <anonymous>:355:23\n    at <anonymous>:356:3\n  (Session info: chrome=122.0.6261.69)\nTraceback (most recent call last):\n  File \"/home/gyuyoung/github/wpt/tools/wptrunner/wptrunner/executors/executorwebdriver.py\", line 527, in run_func\n    self.result = True, self.func(self.protocol, self.url, self.timeout)\n  File \"/home/gyuyoung/github/wpt/tools/wptrunner/wptrunner/executors/executorwebdriver.py\", line 610, in do_testharness\n    result = protocol.base.execute_script(\n  File \"/home/gyuyoung/github/wpt/tools/wptrunner/wptrunner/executors/executorwebdriver.py\", line 57, in execute_script\n    return method(script, args=args)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 22, in inner\n    return func(self, *args, **kwargs)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 735, in execute_async_script\n    return self.send_session_command(\"POST\", \"execute/async\", body)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 603, in send_session_command\n    return self.send_command(method, url, body, timeout)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 567, in send_command\n    raise err\nwebdriver.error.JavascriptErrorException: javascript error (500): javascript error: window.__wptrunner_process_next_event is not a function\nJavaScript stack:\nTypeError: window.__wptrunner_process_next_event is not a function\n    at eval (eval at executeAsyncScript (:447:26), <anonymous>:7:8)\n    at eval (eval at executeAsyncScript (:447:26), <anonymous>:9:4)\n    at executeAsyncScript (<anonymous>:447:47)\n    at <anonymous>:462:29\n    at callFunction (<anonymous>:341:22)\n    at <anonymous>:355:23\n    at <anonymous>:356:3\n  (Session info: chrome=122.0.6261.69)\n\nRemote-end stacktrace:\n\n#0 0x5648c4c12e93 <unknown>\n#1 0x5648c490ace6 <unknown>\n#2 0x5648c4912711 <unknown>\n#3 0x5648c4912236 <unknown>\n#4 0x5648c4997e52 <unknown>\n#5 0x5648c4977eb2 <unknown>\n#6 0x5648c4996899 <unknown>\n#7 0x5648c4977c53 <unknown>\n#8 0x5648c4948db3 <unknown>\n#9 0x5648c494977e <unknown>\n#10 0x5648c4bd87cb <unknown>\n#11 0x5648c4bdc7e5 <unknown>\n#12 0x5648c4bc60e1 <unknown>\n#13 0x5648c4bdd372 <unknown>\n#14 0x5648c4baa1bf <unknown>\n#15 0x5648c4c01488 <unknown>\n#16 0x5648c4c01683 <unknown>\n#17 0x5648c4c12044 <unknown>\n#18 0x7fbde8094ac3 <unknown>\n\n", "duration": 841, "expected": "OK", "known_intermittent": []}, {"test": "/dom/events/relatedTarget.window.html", "subsuite": "", "subtests": [{"name": "Reset if target pointed to a shadow tree", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Retarget a shadow-tree relatedTarget", "status": "FAIL", "message": "assert_equals: expected Element node <div><p></p></div> but got DocumentFragment node with 1 child", "expected": "PASS", "known_intermittent": []}, {"name": "Reset if target pointed to a shadow tree pre-dispatch", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Retarget a shadow-tree relatedTarget, part 2", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Reset targets on early return", "status": "FAIL", "message": "assert_false: expected false got true", "expected": "PASS", "known_intermittent": []}, {"name": "Reset targets before activation behavior", "status": "FAIL", "message": "assert_equals: expected null but got Element node <input type=\"checkbox\"></input>", "expected": "PASS", "known_intermittent": []}], "status": "OK", "message": null, "duration": 135, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/non-passive-wheel-event-listener-on-window.html", "subsuite": "", "subtests": [{"name": "non-passive wheel event listener on window", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 278, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-touchmove-event-listener-on-window.html", "subsuite": "", "subtests": [{"name": "passive touchmove event listener on window", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 347, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-fired-to-element-with-overscroll-behavior.html", "subsuite": "", "subtests": [{"name": "Tests that the scroll is not propagated beyond div with non-auto overscroll-behavior.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 1107, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-for-user-scroll.html", "subsuite": "", "subtests": [{"name": "Tests that the target_div gets scrollend event when touch dragging.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Tests that the target_div gets scrollend event when clicking scrollbar.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Tests that the target_div gets scrollend event when dragging the scrollbar thumb.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Tests that the target_div gets scrollend event when mouse wheel scrolling.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Tests that the target_div gets scrollend event when sending DOWN key to the target.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 2175, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-touchmove-event-listener-on-root.html", "subsuite": "", "subtests": [{"name": "passive touchmove event listener on root", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 319, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-touchstart-event-listener-on-div.html", "subsuite": "", "subtests": [{"name": "passive touchstart event listener on div", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 319, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-with-snap-on-fractional-offset.html", "subsuite": "", "subtests": [{"name": "snap to fractional offset fires scrollend exactly once.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 216, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-wheel-event-listener-on-window.html", "subsuite": "", "subtests": [{"name": "passive wheel event listener on window", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 263, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/passive-wheel-event-listener-on-root.html", "subsuite": "", "subtests": [{"name": "passive wheel event listener on root", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 264, "known_intermittent": []}, {"test": "/dom/events/non-cancelable-when-passive/synthetic-events-cancelable.html", "subsuite": "", "subtests": [{"name": "Synthetic wheel event with interface WheelEvent is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthetic wheel event with interface Event is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthetic mousewheel event with interface WheelEvent is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthetic mousewheel event with interface Event is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthetic touchstart event with interface TouchEvent is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthetic touchstart event with interface Event is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthetic touchmove event with interface TouchEvent is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthetic touchmove event with interface Event is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthetic touchend event with interface TouchEvent is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthetic touchend event with interface Event is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthetic touchcancel event with interface TouchEvent is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Synthetic touchcancel event with interface Event is not cancelable", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 120, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-fired-for-mandatory-snap-point-after-load.html", "subsuite": "", "subtests": [{"name": "scrollend event fired after load for mandatory snap point", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 334, "known_intermittent": []}, {"test": "/dom/events/scrolling/overscroll-event-fired-to-window.html", "subsuite": "", "subtests": [{"name": "Tests that the window gets overscroll event when no element scrollsafter touch scrolling.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 452, "known_intermittent": []}, {"test": "/dom/events/scrolling/overscroll-deltas.html", "subsuite": "", "subtests": [{"name": "testing, vertical", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "testing, horizontal", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 478, "known_intermittent": []}, {"test": "/dom/events/scrolling/overscroll-event-fired-to-document.html", "subsuite": "", "subtests": [], "status": "ERROR", "message": "javascript error: window.__wptrunner_process_next_event is not a function\nJavaScript stack:\nTypeError: window.__wptrunner_process_next_event is not a function\n    at eval (eval at executeAsyncScript (:447:26), <anonymous>:7:8)\n    at eval (eval at executeAsyncScript (:447:26), <anonymous>:9:4)\n    at executeAsyncScript (<anonymous>:447:47)\n    at <anonymous>:462:29\n    at callFunction (<anonymous>:341:22)\n    at <anonymous>:355:23\n    at <anonymous>:356:3\n  (Session info: chrome=122.0.6261.69)\nTraceback (most recent call last):\n  File \"/home/gyuyoung/github/wpt/tools/wptrunner/wptrunner/executors/executorwebdriver.py\", line 527, in run_func\n    self.result = True, self.func(self.protocol, self.url, self.timeout)\n  File \"/home/gyuyoung/github/wpt/tools/wptrunner/wptrunner/executors/executorwebdriver.py\", line 610, in do_testharness\n    result = protocol.base.execute_script(\n  File \"/home/gyuyoung/github/wpt/tools/wptrunner/wptrunner/executors/executorwebdriver.py\", line 57, in execute_script\n    return method(script, args=args)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 22, in inner\n    return func(self, *args, **kwargs)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 735, in execute_async_script\n    return self.send_session_command(\"POST\", \"execute/async\", body)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 603, in send_session_command\n    return self.send_command(method, url, body, timeout)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 567, in send_command\n    raise err\nwebdriver.error.JavascriptErrorException: javascript error (500): javascript error: window.__wptrunner_process_next_event is not a function\nJavaScript stack:\nTypeError: window.__wptrunner_process_next_event is not a function\n    at eval (eval at executeAsyncScript (:447:26), <anonymous>:7:8)\n    at eval (eval at executeAsyncScript (:447:26), <anonymous>:9:4)\n    at executeAsyncScript (<anonymous>:447:47)\n    at <anonymous>:462:29\n    at callFunction (<anonymous>:341:22)\n    at <anonymous>:355:23\n    at <anonymous>:356:3\n  (Session info: chrome=122.0.6261.69)\n\nRemote-end stacktrace:\n\n#0 0x5606275b3e93 <unknown>\n#1 0x5606272abce6 <unknown>\n#2 0x5606272b3711 <unknown>\n#3 0x5606272b3236 <unknown>\n#4 0x560627338e52 <unknown>\n#5 0x560627318eb2 <unknown>\n#6 0x560627337899 <unknown>\n#7 0x560627318c53 <unknown>\n#8 0x5606272e9db3 <unknown>\n#9 0x5606272ea77e <unknown>\n#10 0x5606275797cb <unknown>\n#11 0x56062757d7e5 <unknown>\n#12 0x5606275670e1 <unknown>\n#13 0x56062757e372 <unknown>\n#14 0x56062754b1bf <unknown>\n#15 0x5606275a2488 <unknown>\n#16 0x5606275a2683 <unknown>\n#17 0x5606275b3044 <unknown>\n#18 0x7f3f66894ac3 <unknown>\n\n", "duration": 813, "expected": "OK", "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-not-fired-on-no-scroll.html", "subsuite": "", "subtests": [{"name": "No scroll via wheel on div shouldn't fire scrollend.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "No scroll via keys on div shouldn't fire scrollend.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "No scroll via wheel on document shouldn't fire scrollend.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "No scroll via keys on document shouldn't fire scrollend.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 2229, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-fired-after-snap.html", "subsuite": "", "subtests": [{"name": "Tests that scrollend is fired after scroll snap animation completion.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Tests that scrollend is fired after fling snap animation completion.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 2068, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-fires-to-iframe-window.html", "subsuite": "", "subtests": [], "status": "ERROR", "message": "stale element reference: stale element not found\n  (Session info: chrome=122.0.6261.69)\nTraceback (most recent call last):\n  File \"/home/gyuyoung/github/wpt/tools/wptrunner/wptrunner/executors/executorwebdriver.py\", line 527, in run_func\n    self.result = True, self.func(self.protocol, self.url, self.timeout)\n  File \"/home/gyuyoung/github/wpt/tools/wptrunner/wptrunner/executors/executorwebdriver.py\", line 610, in do_testharness\n    result = protocol.base.execute_script(\n  File \"/home/gyuyoung/github/wpt/tools/wptrunner/wptrunner/executors/executorwebdriver.py\", line 57, in execute_script\n    return method(script, args=args)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 22, in inner\n    return func(self, *args, **kwargs)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 735, in execute_async_script\n    return self.send_session_command(\"POST\", \"execute/async\", body)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 603, in send_session_command\n    return self.send_command(method, url, body, timeout)\n  File \"/home/gyuyoung/github/wpt/tools/webdriver/webdriver/client.py\", line 567, in send_command\n    raise err\nwebdriver.error.StaleElementReferenceException: stale element reference (404): stale element reference: stale element not found\n  (Session info: chrome=122.0.6261.69)\n\nRemote-end stacktrace:\n\n#0 0x5644e5a28e93 <unknown>\n#1 0x5644e5720ce6 <unknown>\n#2 0x5644e57260bc <unknown>\n#3 0x5644e5727e4b <unknown>\n#4 0x5644e5727eec <unknown>\n#5 0x5644e57287af <unknown>\n#6 0x5644e5728236 <unknown>\n#7 0x5644e57ade52 <unknown>\n#8 0x5644e578deb2 <unknown>\n#9 0x5644e57ac899 <unknown>\n#10 0x5644e578dc53 <unknown>\n#11 0x5644e575edb3 <unknown>\n#12 0x5644e575f77e <unknown>\n#13 0x5644e59ee7cb <unknown>\n#14 0x5644e59f27e5 <unknown>\n#15 0x5644e59dc0e1 <unknown>\n#16 0x5644e59f3372 <unknown>\n#17 0x5644e59c01bf <unknown>\n#18 0x5644e5a17488 <unknown>\n#19 0x5644e5a17683 <unknown>\n#20 0x5644e5a28044 <unknown>\n#21 0x7f8e0da94ac3 <unknown>\n\n", "duration": 1566, "expected": "OK", "known_intermittent": []}, {"test": "/dom/events/webkit-animation-start-event.html", "subsuite": "", "subtests": [{"name": "onanimationstart and onwebkitanimationstart are not aliases", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of a webkitAnimationStart event does trigger a prefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of a webkitAnimationStart event does not trigger an unprefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of an animationstart event does not trigger a prefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkitanimationstart event handler should trigger for an animation", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkitanimationstart event handler should not trigger if an unprefixed event handler also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkitanimationstart event handler should not trigger if an unprefixed listener also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "event types for prefixed and unprefixed animationstart event handlers should be named appropriately", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationStart event listener should trigger for an animation", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationStart event listener should not trigger if an unprefixed listener also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationStart event listener should not trigger if an unprefixed event handler also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "event types for prefixed and unprefixed animationstart event listeners should be named appropriately", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationStart event listener is case sensitive", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 306, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-fired-for-scrollIntoView.html", "subsuite": "", "subtests": [{"name": "Tests scrollend event for scrollIntoView.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Tests scrollend event for nested scrollIntoView.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 2139, "known_intermittent": []}, {"test": "/dom/events/webkit-animation-end-event.html", "subsuite": "", "subtests": [{"name": "onanimationend and onwebkitanimationend are not aliases", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of a webkitAnimationEnd event does trigger a prefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of a webkitAnimationEnd event does not trigger an unprefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of an animationend event does not trigger a prefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkitanimationend event handler should trigger for an animation", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkitanimationend event handler should not trigger if an unprefixed event handler also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkitanimationend event handler should not trigger if an unprefixed listener also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "event types for prefixed and unprefixed animationend event handlers should be named appropriately", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationEnd event listener should trigger for an animation", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationEnd event listener should not trigger if an unprefixed listener also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationEnd event listener should not trigger if an unprefixed event handler also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "event types for prefixed and unprefixed animationend event listeners should be named appropriately", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitAnimationEnd event listener is case sensitive", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 338, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-fires-to-text-input.html", "subsuite": "", "subtests": [{"name": "scrolled input field should receive scrollend.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 124, "known_intermittent": []}, {"test": "/dom/events/shadow-relatedTarget.html", "subsuite": "", "subtests": [{"name": "relatedTarget should not leak at capturing phase, at window object.", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "relatedTarget should not leak at target.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 112, "known_intermittent": []}, {"test": "/dom/events/webkit-transition-end-event.html", "subsuite": "", "subtests": [{"name": "ontransitionend and onwebkittransitionend are not aliases", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of a webkitTransitionEnd event does trigger a prefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of a webkitTransitionEnd event does not trigger an unprefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "dispatchEvent of an transitionend event does not trigger a prefixed event handler or listener", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkittransitionend event handler should trigger for an animation", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkittransitionend event handler should not trigger if an unprefixed event handler also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "onwebkittransitionend event handler should not trigger if an unprefixed listener also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "event types for prefixed and unprefixed transitionend event handlers should be named appropriately", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitTransitionEnd event listener should trigger for an animation", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitTransitionEnd event listener should not trigger if an unprefixed listener also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitTransitionEnd event listener should not trigger if an unprefixed event handler also exists", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "event types for prefixed and unprefixed transitionend event listeners should be named appropriately", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "webkitTransitionEnd event listener is case sensitive", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 307, "known_intermittent": []}, {"test": "/dom/events/scrolling/input-text-scroll-event-when-using-arrow-keys.html", "subsuite": "", "subtests": [{"name": "Scroll event fired for <input> element.", "status": "TIMEOUT", "message": "Test timed out", "expected": "PASS", "known_intermittent": []}, {"name": "Scroll event fired for <textarea> element.", "status": "NOTRUN", "message": null, "expected": "PASS", "known_intermittent": []}], "status": "TIMEOUT", "message": null, "duration": 10120, "expected": "OK", "known_intermittent": []}, {"test": "/dom/events/scrolling/overscroll-event-fired-to-scrolled-element.html", "subsuite": "", "subtests": [{"name": "Tests that the scrolled element gets overscroll event after fully scrolling by touch.", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 874, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-fired-after-sequence-of-scrolls.tentative.html", "subsuite": "", "subtests": [{"name": "Move down, up and down again, receive scrollend event only once", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "Move right, left and right again, receive scrollend event only once", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 2200, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-fired-to-document.html", "subsuite": "", "subtests": [{"name": "testing, vertical", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "testing, horizontal", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 365, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-fired-to-window.html", "subsuite": "", "subtests": [{"name": "testing, vertical", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 231, "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-fires-on-visual-viewport.html", "subsuite": "", "subtests": [{"name": "scrollend fires when visual viewport is panned.", "status": "TIMEOUT", "message": "Test timed out", "expected": "PASS", "known_intermittent": []}], "status": "TIMEOUT", "message": null, "duration": 10127, "expected": "OK", "known_intermittent": []}, {"test": "/dom/events/scrolling/scrollend-event-not-fired-after-removing-scroller.tentative.html", "subsuite": "", "subtests": [{"name": "No scrollend is received after removing parent div", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "No scrollend is received after removing scrolling element", "status": "PASS", "message": null, "known_intermittent": []}, {"name": "scrollend is received after removing descendant div", "status": "PASS", "message": null, "known_intermittent": []}], "status": "OK", "message": null, "duration": 2155, "known_intermittent": []}], "subsuites": {"": {"subsuite": ""}}, "time_end": 1709099585999}
